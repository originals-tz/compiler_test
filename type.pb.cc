// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: type.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "type.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace token {

namespace {

const ::google::protobuf::EnumDescriptor* token_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_type_2eproto() {
  protobuf_AddDesc_type_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "type.proto");
  GOOGLE_CHECK(file != NULL);
  token_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_type_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_type_2eproto() {
}

void protobuf_AddDesc_type_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ntype.proto\022\005token*\246\003\n\005token\022\017\n\013E_TOKEN"
    "_EOF\020\001\022\020\n\014E_TOKEN_PLUS\020\002\022\021\n\rE_TOKEN_MINU"
    "S\020\003\022\020\n\014E_TOKEN_STAR\020\004\022\021\n\rE_TOKEN_SLASH\020\005"
    "\022\022\n\016E_TOKEN_INILIT\020\006\022\022\n\016E_TOKEN_EQUALS\020\007"
    "\022\021\n\rE_TOKEN_IDENT\020\010\022\021\n\rE_TOKEN_PRINT\020\t\022\017"
    "\n\013E_TOKEN_INT\020\n\022\021\n\rE_TOKEN_SEMIT\020\013\022\016\n\nE_"
    "TOKEN_EQ\020\014\022\016\n\nE_TOKEN_NE\020\r\022\016\n\nE_TOKEN_LT"
    "\020\016\022\016\n\nE_TOKEN_GT\020\017\022\016\n\nE_TOKEN_LE\020\020\022\016\n\nE_"
    "TOKEN_GE\020\021\022\022\n\016E_TOKEN_LBRACE\020\022\022\022\n\016E_TOKE"
    "N_RBRACE\020\023\022\022\n\016E_TOKEN_LPAREN\020\024\022\022\n\016E_TOKE"
    "N_RPAREN\020\025\022\016\n\nE_TOKEN_IF\020\026\022\020\n\014E_TOKEN_EL"
    "SE\020\027", 444);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "type.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_type_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_type_2eproto {
  StaticDescriptorInitializer_type_2eproto() {
    protobuf_AddDesc_type_2eproto();
  }
} static_descriptor_initializer_type_2eproto_;
const ::google::protobuf::EnumDescriptor* token_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return token_descriptor_;
}
bool token_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace token

// @@protoc_insertion_point(global_scope)
